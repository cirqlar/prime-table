{"version":3,"sources":["lib/prime.js","components/PrimeProductTable.js","pages/App.js","index.js","components/Table.module.css","pages/App.module.css"],"names":["persistPrimes","PrimeProductTable","numberOfPrimes","np","useState","primes","React","useMemo","n","initialLength","length","slice","current_number","isCurrentPrime","sqrt","Math","j","prime","push","getPrimes","className","styles","wrap","table","map","data-testid","multiplyBy","App","container","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"wLACIA,EAAgB,CAAC,EAAG,G,2BC2CTC,MAtCf,YAAyD,IAAD,IAA3BC,eAAgBC,OAAW,MAAN,GAAM,EACtD,EAAyBC,mBAASD,GAA3BD,EAAP,oBAIMG,EAASC,IAAMC,SAAQ,WAC3B,ODJW,SAAmBC,GAGhC,GAAIA,GAAK,EAAG,MAAO,GAEnB,IAAMC,EAAgBT,EAAcU,OACpC,GAAID,GAAiBD,EAAG,OAAOR,EAAcW,MAAM,EAAGH,GAQtD,IANA,IAMSI,EANUZ,EAAcS,EAAgB,GAAK,EAMhBT,EAAcU,OAASF,EAAGI,GAAkB,EAAG,CAcnF,IAZA,IAAIC,GAAiB,EAEfC,EAAOC,KAAKD,KAAKF,GAUdI,EAAI,EAAGA,EAAIhB,EAAcU,OAAQM,IAAK,CAC7C,IAAMC,EAAQjB,EAAcgB,GAE5B,GAAIC,EAAQH,EAAM,MAElB,GAAIF,EAAiBK,IAAU,EAAG,CAChCJ,GAAiB,EACjB,OAGAA,GAAgBb,EAAckB,KAAKN,GAGzC,OAAOZ,EAAcW,QCrCZQ,CAAUjB,KAChB,CAACA,IAEJ,OACE,qBAAKkB,UAAWC,IAAOC,KAAvB,SACE,wBAAOF,UAAWC,IAAOE,MAAzB,UACE,gCACE,+BACE,uBAEClB,EAAOmB,KAAI,SAACP,GAAD,OACV,oBAAgBQ,cAAY,eAA5B,SAA4CR,GAAnCA,WAIf,gCAEGZ,EAAOmB,KAAI,SAACP,GAAD,OACV,+BACE,oBAAIQ,cAAY,YAAhB,SAA6BR,IAE5BZ,EAAOmB,KAAI,SAACE,GAAD,OACV,6BAAsBT,EAAQS,GAArBA,QAJJT,c,gBCfNU,MAXf,WACE,OACE,sBAAKP,UAAWC,IAAOO,UAAvB,UACE,8BACE,sDAEF,cAAC,EAAD,Q,MCHNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCV1BC,EAAOC,QAAU,CAAC,KAAO,oBAAoB,MAAQ,uB,kBCArDD,EAAOC,QAAU,CAAC,UAAY,0B","file":"static/js/main.45d2c1cb.chunk.js","sourcesContent":["// persist found primes so subsequent calls to getPrimes run faster\nlet persistPrimes = [2, 3]; \n\n/**\n * \n * @param {number} n number of primes to generate\n * @returns {number[]} array of prime numbers\n */\nexport default function getPrimes(n) {\n  // Ensure n is a positive number greater than 0\n  // Return an empty array otherwise\n  if (n <= 0) return [];\n\n  const initialLength = persistPrimes.length; // Set the first prime number as two\n  if (initialLength >= n) return persistPrimes.slice(0, n); // Return if n is 1 (array is already full)\n\n  const nextNumber = persistPrimes[initialLength - 1] + 2;\n\n  // Iterator is the current number being tested\n  // Start at nextNumber since we already have all previous primes\n  // Loop until primes array has reached the desired length\n  // skip all even numbers because none of them are prime numbers\n  for (let current_number = nextNumber; persistPrimes.length < n; current_number += 2) {\n\n    let isCurrentPrime = true; // assume number is prime\n\n    const sqrt = Math.sqrt(current_number);\n\n    /**\n     * Loop over current primes array\n     * Skip 2 because current number can't be even\n     * Reasoning: \n     *     All prime numbers are divisible by one and itself\n     *     Non prime numbers are divisible by at least one prime number\n     *     Smallest prime factor of a non prime number is <= its square root\n     */\n    for (let j = 1; j < persistPrimes.length; j++) {\n      const prime = persistPrimes[j];\n\n      if (prime > sqrt) break; // if current number is greater than sqrt, number is prime\n\n      if (current_number % prime === 0) { // current number is not prime\n        isCurrentPrime = false;\n        break;\n      }\n    }\n    if (isCurrentPrime) persistPrimes.push(current_number);\n  }\n\n  return persistPrimes.slice();\n}\n","import React, { useState } from \"react\";\n\nimport getPrimes from \"../lib/prime\";\n\nimport styles from \"./Table.module.css\";\n\nfunction PrimeProductTable({ numberOfPrimes: np = 10 }) {\n  const [numberOfPrimes] = useState(np);\n\n  // Memoize result to ensure function isn't \n  // called unless number changes\n  const primes = React.useMemo(() => {\n    return getPrimes(numberOfPrimes);\n  }, [numberOfPrimes]);\n\n  return (\n    <div className={styles.wrap}>\n      <table className={styles.table}>\n        <thead>\n          <tr>\n            <th></th>\n            {/* loop over primes to generate table header cells */}\n            {primes.map((prime) => (\n              <th key={prime} data-testid=\"columnHeader\">{prime}</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {/* loop over primes to generate table rows */}\n          {primes.map((prime) => (\n            <tr key={prime}>\n              <td data-testid=\"rowLeader\">{prime}</td>\n              {/* loop over primes to generate row cells */}\n              {primes.map((multiplyBy) => (\n                <td key={multiplyBy}>{prime * multiplyBy}</td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default PrimeProductTable;\n","import PrimeProductTable from \"../components/PrimeProductTable\";\n\nimport styles from \"./App.module.css\";\n\nfunction App() {\n  return (\n    <div className={styles.container}>\n      <div>\n        <h1>Products of Primes</h1>\n      </div>\n      <PrimeProductTable />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './pages/App';\n\nimport './global.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Table_wrap__1JCDb\",\"table\":\"Table_table__3M_gK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__381Bn\"};"],"sourceRoot":""}